name: Flake8

on: [push]

jobs:
  flake8-analysis:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.11"]

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y portaudio19-dev

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache
          key: ${{ runner.os }}-py${{ matrix.python-version }}-cache-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-cache-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
              python -m pip install --upgrade pip
              pip install -r requirements.txt
            else
              echo "No requirements.txt found, skipping dependencies installation"
            fi

      - name: Install Flake8
        run: |
          pip install flake8

      - name: Lint with Flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Treat all errors as warnings and check for complexity and line length
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
